#include <bits/stdc++.h> 
/************************************************************

    Following is the Binary Tree node structure
    
    template <typename T>
    class TreeNode {
        public :
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~TreeNode() {
            if(left)
                delete left;
            if(right)
                delete right;
        }
    };

************************************************************/
  void inorder(TreeNode<int>* root,vector<int> &ans){
      //base case
      if(root == NULL){
          return;
      }
      
      inorder(root->left,ans);
      ans.push_back(root->data);
      inorder(root->right,ans);
      
  }


TreeNode<int>* flatten(TreeNode<int>* root)
{
  vector<int> ans;
    
    //stored inorder value in sorted way
    inorder(root,ans);
    
    int n= ans.size();
    //create the node
    TreeNode<int>* newNode = new TreeNode<int>(ans[0]);
    TreeNode<int>* curr = newNode;
    //2nd step
    for(int i=1;i<n;i++){
        
         TreeNode<int>* temp = new  TreeNode<int>(ans[i]);
         curr->right = temp;
         curr->left = NULL;
         
         curr = temp;
        
    }
    
    //3rd step
    curr->left = NULL;
    curr->right = NULL;
    
   return newNode;
    
    }

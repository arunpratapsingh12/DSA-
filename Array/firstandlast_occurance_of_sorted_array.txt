//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends

int findfirstoccurance(int arr[], int n , int x)
{
    int s=0,e=n-1;
    int mid = s+(e-s)/2;
    int ans=-1;
    
    while(s<=e)
    {
        if(arr[mid] == x){
            ans = mid;
            e=mid-1;
        }
        else if(arr[mid] < x){
            s=mid+1;
        }
        else if(arr[mid] > x){
            e=mid-1;
        }
        
        mid = s+(e-s)/2;
        
    }
    
    return ans;
}

int findlastoccurance(int arr[], int n , int x)
{
    int s=0,e=n-1;
    int mid = s+(e-s)/2;
    int ans = -1;
    
    while(s<=e)
    {
        if(arr[mid] == x){
            ans = mid;
            s=mid+1;
        }
        else if(arr[mid] < x){
            s=mid+1;
        }
        else if(arr[mid] > x){
            e=mid-1;
        }
        
        mid = s+(e-s)/2;
        
    }
    
    return ans;
}

vector<int> find(int arr[], int n , int x )
{
   
//   vector<int> ans;
//   int first = findfirstoccurance(arr,n,x);
//     int last = findlastoccurance(arr,n,x);
    
//     ans.push_back(first);
//      ans.push_back(last);

     
//      return ans;


vector<int>v;
    unordered_map<int,int>m;
    for(int i=0;i<n;i++){
        m[arr[i]]++;
    }
    for(int i=0;i<n;i++){
        if(arr[i]==x){
            v.push_back(i);
            v.push_back((m[arr[i]]+i)-1);
            break;
        }
    }
    if(v.empty()){
         v.push_back(-1);
         v.push_back(-1);
    }
    return v;
    
}

//{ Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n,x;
        cin>>n>>x;
        int arr[n],i;
        for(i=0;i<n;i++)
        cin>>arr[i];
        vector<int> ans;
        ans=find(arr,n,x);
        cout<<ans[0]<<" "<<ans[1]<<endl;
    }
    return 0;
}



// } Driver Code Ends
//{ Driver Code Starts
#include <bits/stdc++.h> 
using namespace std; 

// } Driver Code Ends
class Solution
{   
    public: 
    //Function to return a list of integers denoting spiral traversal of matrix.
    vector<int> spirallyTraverse(vector<vector<int> > matrix, int r, int c) 
    {
        int rowStart=0,rowEnd=r-1,colStart=0,colEnd=c-1;
        int cnt=0,total=(r*c);
        vector<int>ans;
        while(rowStart<=rowEnd && colStart<=colEnd){
            for(int col=colStart;col<=colEnd && cnt<total;col++){
                ans.push_back(matrix[rowStart][col]);
                cnt++;
            }
            rowStart++;
            for(int row=rowStart;row<=rowEnd && cnt<total;row++){
                ans.push_back(matrix[row][colEnd]);
                cnt++;
            }
            colEnd--;
            for(int col=colEnd;col>=colStart && cnt<total;col--){
                ans.push_back(matrix[rowEnd][col]);
                cnt++;
            }
            rowEnd--;
            for(int row=rowEnd;row>=rowStart && cnt<total;row--){
                ans.push_back(matrix[row][colStart]);
                cnt++;
            }
            colStart++;
        }
        return ans;
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin>>t;
    
    while(t--) 
    {
        int r,c;
        cin>>r>>c;
        vector<vector<int> > matrix(r); 

        for(int i=0; i<r; i++)
        {
            matrix[i].assign(c, 0);
            for( int j=0; j<c; j++)
            {
                cin>>matrix[i][j];
            }
        }

        Solution ob;
        vector<int> result = ob.spirallyTraverse(matrix, r, c);
        for (int i = 0; i < result.size(); ++i)
                cout<<result[i]<<" ";
        cout<<endl;
    }
    return 0;
}
// } Driver Code Ends
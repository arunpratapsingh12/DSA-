#include<iostream>
using namespace std;

class heap{

public:
    int arr[100];
    int sizes;

    heap()
    {
        arr[0] = -1;
        sizes = 0;
    }

    void inserts(int val){

     sizes = sizes + 1;
     int index = sizes;
     arr[index] = val;


     while(index > 1){

     int parent = index/2;
     if(arr[parent] < arr[index])
        {

            swap(arr[parent] , arr[index]);
            index = parent;

        }else{

        return ;
        }
     }

    }


    void deletion()
    {
        if(sizes == 0){
            cout<<"nothing to delete"<<endl;
            return;
        }

        //1st step
        arr[1] = arr[sizes];

        //2nd step
        sizes--;

        //3rd step

        int i=1;
        while(i<sizes){

        int leftIndex = 2*i;
        int rightIndex = 2*i+1;


        if(leftIndex < sizes && arr[i] < arr[leftIndex]){
            swap(arr[i] , arr[leftIndex]);
            i = leftIndex;
        }else if(rightIndex < sizes && arr[i] < arr[rightIndex]){
            swap(arr[i] , arr[rightIndex]);
            i = rightIndex;
        }else{

        return;
        }

        }
    }

    void print(){
    for(int i=1;i<=sizes;i++){
        cout<<arr[i]<<" ";
    }cout<<endl;

    }

};


int main()
{
    heap h;
//
//    h.inserts(55);
//     h.inserts(25);
//      h.inserts(65);
//       h.inserts(58);

  h.print();
  h.deletion();
    h.print();
    return 0;
}

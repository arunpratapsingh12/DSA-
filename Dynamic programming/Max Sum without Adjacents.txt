//{ Driver Code Starts
#include <bits/stdc++.h>

using namespace std;


// } Driver Code Ends
//User function template for C++
class Solution{
public:	
int solve(int *arr,int n){
    //base case 
    if(n < 0){
        return 0;
    }
    
    if(n==0){
        return arr[0];
    }
    
    int include = solve(arr,n-2) + arr[n];
    int exclude = solve(arr,n-1) + 0;
     return max(include,exclude);
}


// <-----------------------recursion + memoization-------------------------->
 
int solveRecMemo(int* arr, int n, vector<int> &dp){
    if( n < 0) return 0;
    if(n == 0) return arr[0];
    
    if(dp[n] != -1) 
        return dp[n];
        
    int include = solveRecMemo(arr , n-2,dp) + arr[n];
    int exclude = solveRecMemo(arr , n-1,dp) + 0;
    
    dp[n] = max(include , exclude);
    return dp[n];
}
// <-----------------------Tabulation-------------------------------------->

int tabulation(int *arr,int n){
    vector<int> dp(n,0);
    dp[0] = arr[0];
    for(int i=1;i<n;i++){
        int include = dp[i-2] + arr[i];
        int exclude = dp[i-1] + 0;
        dp[i] = max(include,exclude);
    }
    return dp[n-1];
}

// <-----------------------space optimization-------------------------->
 
 int Space_optimization(int *arr,int n){
     int prev2 = 0;
     int prev1 = arr[0];
        for(int i=1;i<n;i++){
        int include = prev2 + arr[i];
        int exclude = prev1 + 0;
        int ans = max(include,exclude);
        prev2 = prev1;
        prev1 = ans;
    }
    return prev1;
     
 }

	int findMaxSum(int *arr, int n) {
	   // return solve(arr,n);
	   
	   //vector<int> dp(n,-1);
	   //return solveRecMemo(arr,n,dp);
	   
	   //return tabulation(arr,n);
	   
	   return Space_optimization(arr,n);
	}
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int arr[n];
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        Solution ob;
        auto ans = ob.findMaxSum(arr, n);
        cout << ans << "\n";
    }
    return 0;
}
// } Driver Code Ends